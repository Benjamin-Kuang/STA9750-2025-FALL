---
title: "Mini Project 1"
author: "Jin Kuang"
---

## Introduction of Dataset
We have two dataset, GLOBAL_TOP_10 and COUNTRY_TOP_10. GLOBAL_TOP_10 contains data about 
the Netflix's shows globally, while COUNTRY_TOP_10 groups these shows by countries and shows
less detail about shows themselves.

We are now going to analyze some specific characteristics as indicated by the instructions posted by Professor Weylandt.

## Task 1
```{r}
if(!dir.exists(file.path("data", "mp01"))){
    dir.create(file.path("data", "mp01"), showWarnings=FALSE, recursive=TRUE)
}

GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.csv")

if(!file.exists(GLOBAL_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                  destfile=GLOBAL_TOP_10_FILENAME)
}

COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")

if(!file.exists(COUNTRY_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", 
                  destfile=COUNTRY_TOP_10_FILENAME)
}
```

```{r}
if(!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)

GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME)
```

## Task 2
```{r}
GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
    mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))
```

## Task 3
```{r}
COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME,
                          na = "N/A")
```

## Task 4
### Q1
```{r}
library(dplyr)

country_n <- COUNTRY_TOP_10 |>
  distinct(country_name) |>
  count()

country_n
```

Netflix operates in `{r} country_n` different countries.


### Q2
```{r}
#| code-fold: true
library(DT)
library(stringr)

GLOBAL_TOP_10 |>
  filter(category == "Films (Non-English)") |>    
  group_by(show_title) |> 
  reframe(`Cumulative Weeks` = cumulative_weeks_in_top_10) |> 
  arrange(desc(`Cumulative Weeks`)) |> 
  rename(`Show Title` = show_title) |>
  head(20) |>
  datatable(options = list(searching = FALSE, info = FALSE)) 


```

Therefore, "All Quiet on the Western Front" has spent the most cumulative weeks 
in the global top 10, and for 23 weeks.

### Q3
```{r}
#| code-fold: true
GLOBAL_TOP_10 |>
  filter(category %in% c("Films (English)", "Films (Non-English)")) |>                 
  group_by(show_title) |>
  reframe(`Runtime (Minutes)` = round(60 * runtime)) |>
  arrange(desc(`Runtime (Minutes)`)) |>
  rename(`Show Title` = show_title) |>
  head(20) |>
  datatable(options = list(searching = FALSE, info = FALSE))
```

Therefore, the longest film (English or non-English) to have ever appeared in the Netflix global Top 10
is "Pushpa 2: The Rule (Reloaded Version)", which lasts for 224 minutes.

### Q4
```{r}
#| code-fold: true
GLOBAL_TOP_10 |>
  group_by(category, show_title) |>
  summarize(`Total Hours of Global Viewership` = sum(weekly_hours_viewed)) |>
  arrange(desc(`Total Hours of Global Viewership`)) |>
  filter(`Total Hours of Global Viewership` == first(`Total Hours of Global Viewership`)) |>
  rename(`Show Title` = show_title,
         Category = category) |>
  datatable(options = list(searching = FALSE, info = FALSE))
```

Thus, Squid Game has the most total hours of global viewership for non-English TV; 
Stranger Things has the most total hours of global viewership for English TV; 
Red Notice has the most total hours of global viewership for English films; 
Society of the Snow has the most total hours of global viewership for non-English films.

### Q5
```{r}
#| code-fold: true
COUNTRY_TOP_10 |>
  filter(category == "TV") |>    
  group_by(show_title, country_name) |> 
  reframe(`Run Time` = cumulative_weeks_in_top_10) |> 
  arrange(desc(`Run Time`)) |> 
  rename(`Show Title` = show_title,
         `Country Name` = country_name) |>
  head(20) |>
  datatable(options = list(searching = FALSE, info = FALSE)) 
```

Thus, Money Heist had the longest run in a country’s Top 10. It occurred in Pakistan and it lasted
for 127 weeks.

### Q6
```{r}
#| code-fold: true
COUNTRY_TOP_10 |>
  distinct(country_name, week) |>            
  count(country_name) |>
  rename(`Number of Weeks` = n) |>
  filter(`Number of Weeks` < 200) |>             
  datatable(options = list(searching = FALSE, info = FALSE))
```

Thus, this country that Netflix provides less than 200 weeks of service history is Russia.

```{r}
#| code-fold: true
COUNTRY_TOP_10 |>
  filter(country_name == "Russia") |>
  group_by(country_name) |> 
  reframe(`Week Date` = week) |>
  arrange(desc(`Week Date`)) |> 
  rename(`Country Name` = country_name) |>
  head(20) |>
  datatable(options = list(searching = FALSE, info = FALSE)) 
```

Thus, Netflix cease operations in that country on 2022-02-27.

### Q7
```{r}
total_viewership <- GLOBAL_TOP_10 |>
  filter(show_title %in% c("Squid Game", "Squid Game: The Challenge")) |>
  summarize(`Total Viewership` = sum(weekly_hours_viewed))

total_viewership
```

Thus, the total viewership of the TV show Squid Game is `{r} total_viewership` hours.

### Q8
```{r}
#| code-fold: true
library(lubridate)

GLOBAL_TOP_10 |>
  filter(show_title == "Red Notice", year(week) == 2021) |>
  select(week, show_title, weekly_views) |>
  rename(`Week` = week,
         `Show Title` = show_title,
         `Weekly Views` = weekly_views) |>
  datatable(options = list(searching = FALSE, info = FALSE)) 
```

Since from the above table, we find that the weekly views column are null, so we 
instead use the weekly hours viewed as our final answer.

```{r}
views_n <- GLOBAL_TOP_10 |>
  filter(show_title == "Red Notice", year(week) == 2021) |>
  summarize(`Number of Views` = round(sum(weekly_hours_viewed)) / ((60 + 58) / 60))

views_n
```

Thus, there are approximately `{r} views_n` views received in 2021.

### Q9
```{r}
#| code-fold: true
COUNTRY_TOP_10 |>
  filter(country_name == "United States", category == "Films") |>
  group_by(show_title) |>
  arrange(week) |>
  reframe(`First Rank`  = first(weekly_rank),
          `Eventually Hit Number 1?` = any(weekly_rank == 1),
          `Week That Hit Number 1` = if (any(weekly_rank == 1))
            week[weekly_rank == 1]
          else NA) |>
  filter(`Eventually Hit Number 1?` == TRUE, `First Rank` != 1) |>
  arrange(desc(`Week That Hit Number 1`)) |>
  rename(`Show Title` = show_title) |>
  datatable(options = list(searching = FALSE, info = FALSE)) 
```

Films that first appeared on the Top 10 chart but then became more popular and 
eventually hit Number 1 are listed above. The most recent film to pull this off is
"KPop Demon Hunters".

```{r}
films_n <- COUNTRY_TOP_10 |>
  filter(country_name == "United States", category == "Films") |>
  group_by(show_title) |>
  arrange(week) |>
  reframe(`First Rank` = first(weekly_rank),
          `Eventually Hit Number 1?` = any(weekly_rank == 1),
          `Week That Hit Number 1` = if (any(weekly_rank == 1))
            week[weekly_rank == 1]
          else NA) |>
  filter(`Eventually Hit Number 1?` == TRUE, `First Rank` != 1) |>
  arrange(desc(`Week That Hit Number 1`)) |>
  distinct(show_title) |>
  nrow()

films_n
```

Thus, there are a total of `{r} films_n` Films reached Number 1 in the US but did not originally debut there.

### Q10
```{r}
#| code-fold: true
COUNTRY_TOP_10 |>
  filter(category == "TV") |>
  group_by(show_title, season_title) |>
  arrange(week) |>
  filter(week == first(week)) |>
  summarize(`Number of Country` = length(unique(country_name)),
            .groups = "drop") |>
  arrange(desc(`Number of Country`)) |>
  datatable(options = list(searching = FALSE, info = FALSE)) 
```

Thus, Emily in Paris: Season 2 hits the top 10 in the most countries in its debut week.
It charted for 94 countries.  

## Task 5
```{r}
#| code-fold: true

total_viewership <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  summarize(`Total Viewership` = sum(weekly_hours_viewed))

length_of_popularity <- GLOBAL_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  summarize(`Length of Popularity` = sum(cumulative_weeks_in_top_10))

multinational_appeal <- COUNTRY_TOP_10 |>
  filter(show_title == "Stranger Things") |>
  summarize(`Multinational Appeal` = length(unique(country_name)))

total_viewership_2 <- GLOBAL_TOP_10 |>
  filter(show_title == "The Witcher") |>
  summarize(`Total Viewership` = sum(weekly_hours_viewed))

S_and_T <- GLOBAL_TOP_10 |>
  filter(show_title %in% c("Stranger Things", "The Witcher")) |>
  group_by(show_title) |>
  summarize(`Viewership` = sum(weekly_hours_viewed))

ggplot(S_and_T, aes(x = show_title, y = `Viewership`)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  labs(title = "Viewership Comparison Between Stranger Things and The Witcher",
       x = "Show Title",
       y = "Total Viewership") +
  theme_minimal()
```

### Stranger Things Has Returned with a Brand New Season!!!
#### Stranger Things was always a popular TV show. 
#### Its total viewership has reached to `{r} total_viewership` hours. 
#### There are a total of `{r} length_of_popularity` weeks that Stranger Things was top 10.
#### The multinational appeal of previous seasons was also amazing. There were `{r} multinational_appeal` countries playing it.
#### The Witch was also a extremely popular English TV show, but based on the barplot, its total viewership was only `{r} total_viewership_2`, not even half of that of Stranger Things.

## Task 6
```{r}
#| code-fold: true

india_size <- GLOBAL_TOP_10 |>
  filter(grepl("Hindi", show_title)) |>
  summarize(`Size of Netflix’s Customer Base in India` = 
              sum(weekly_hours_viewed) /  mean(runtime, na.rm = TRUE))

total_viewership4 <- GLOBAL_TOP_10 |>
  filter(grepl("Hindi", show_title)) |>
  summarize(`Total Viewership` = sum(weekly_hours_viewed))

length_of_popularity_4 <- GLOBAL_TOP_10 |>
  filter(grepl("Hindi", show_title)) |>
  summarize(`Length of Popularity` = sum(cumulative_weeks_in_top_10))

viewership_plot <- GLOBAL_TOP_10 |>
  filter(grepl("Hindi", show_title)) |>
  group_by(show_title) |>
  summarize(`Viewership` = sum(weekly_hours_viewed)) |>
  arrange(desc(`Viewership`))

ggplot(viewership_plot, aes(x = show_title, y = `Viewership`)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  coord_flip() +
  labs(title = "Hindi Movies' Total Viewership in India",
       x = "Show Title",
       y = "Total Viewership") +
  theme_minimal()
```

### India Has Been a Great Customer to Netflix!
#### India's total viewership of Netfix has reached to an incredible number: `{r} total_viewership4` hours!
#### Hindi movies' length of popularity is also a terrifying number: `{r} length_of_popularity_4` weeks!
#### The recent subscriber growth in the India has climbed to over `{r} india_size`, assuming that all Hindi-language viewing is from customers in India and the estimated average of runtime of each Hindi movie was based only on the availble data.
#### Based on the graph above, the RRR(Hindi) has an incomparable popularity which surpass every other Hindi movies.

## Task 7 - Press Release for Wednesday: Season 3 
```{r}
#| code-fold: true

total_viewership_3 <- GLOBAL_TOP_10 |>
  filter(show_title == "Wednesday") |>
  summarize(`Total Viewership` = sum(weekly_hours_viewed))

length_of_popularity_3 <- GLOBAL_TOP_10 |>
  filter(show_title == "Wednesday") |>
  summarize(`Length of Popularity` = sum(cumulative_weeks_in_top_10))

multinational_appeal_3 <- COUNTRY_TOP_10 |>
  filter(show_title == "Wednesday") |>
  summarize(`Multinational Appeal` = length(unique(country_name)))
```

### Astonishing Return! Wednesday: Season 3 Has Come Back!
#### The total viewership of previous seasons of Wednesday has reached to `{r} total_viewership_3` hours. 
#### There are a total of `{r} length_of_popularity_3` weeks that Wednesday was top 10.
#### There were `{r} multinational_appeal_3` countries playing Wednesday before, showing unquestionable popularity.